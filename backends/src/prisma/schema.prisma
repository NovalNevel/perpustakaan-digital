generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  username     String         @unique
  email        String         @unique
  password     String
  nim          String         @unique
  faculty      String
  studyProgram String
  role         Role           @default(USER)
  createdAt    DateTime       @default(now())
  loans        BookLoan[]
  RefreshToken RefreshToken[]
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @unique
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
}

model Book {
  id              String     @id @default(uuid())
  title           String
  author          String
  publisher       String
  publicationYear String
  isbn            String     @unique
  pages           Int
  language        String
  shelf           String
  location        String
  available       Boolean    @default(true)
  imageUrl        String? // untuk upload gambar
  createdAt       DateTime   @default(now())
  categoryId      Int?
  category        Category?  @relation(fields: [categoryId], references: [id])
  loans           BookLoan[]
}

model BookLoan {
  id           Int        @id @default(autoincrement())
  borrowedDate DateTime
  dueDate      DateTime
  returnedDate DateTime?
  status       LoanStatus @default(BORROWED)

  user   User @relation(fields: [userId], references: [id])
  userId Int

  book   Book   @relation(fields: [bookId], references: [id])
  bookId String
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  books Book[]
}

enum Role {
  USER
  ADMIN
}

enum LoanStatus {
  BORROWED
  RETURNED
  LATE
}
